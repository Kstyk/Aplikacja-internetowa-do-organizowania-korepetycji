# Generated by Django 4.2 on 2023-09-22 19:13

import classes.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('classes', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('rooms', '0002_initial'),
        ('cities_light', '0011_alter_city_country_alter_city_region_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='timeslot',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, validators=[classes.validators.validate_teacher_role]),
        ),
        migrations.AddField(
            model_name='schedule',
            name='city_of_classes',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cities_light.city'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='classes',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='classes.class'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rooms.room'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL, validators=[classes.validators.validate_student_role]),
        ),
        migrations.AddField(
            model_name='purchasehistory',
            name='city_of_classes',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cities_light.city'),
        ),
        migrations.AddField(
            model_name='purchasehistory',
            name='classes',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classes.class'),
        ),
        migrations.AddField(
            model_name='purchasehistory',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rooms.room'),
        ),
        migrations.AddField(
            model_name='purchasehistory',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, validators=[classes.validators.validate_student_role]),
        ),
        migrations.AddField(
            model_name='opinion',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, validators=[classes.validators.validate_student_role]),
        ),
        migrations.AddField(
            model_name='opinion',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rated_teacher', to=settings.AUTH_USER_MODEL, validators=[classes.validators.validate_teacher_role]),
        ),
        migrations.AddField(
            model_name='class',
            name='cities_of_classes',
            field=models.ManyToManyField(blank=True, null=True, to='cities_light.city'),
        ),
        migrations.AddField(
            model_name='class',
            name='language',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='class_language', to='classes.language'),
        ),
        migrations.AddField(
            model_name='class',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, validators=[classes.validators.validate_teacher_role]),
        ),
        migrations.AlterUniqueTogether(
            name='timeslot',
            unique_together={('teacher', 'day_of_week', 'timeslot_index')},
        ),
        migrations.AlterUniqueTogether(
            name='schedule',
            unique_together={('classes', 'date')},
        ),
    ]
